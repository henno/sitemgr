# Redirect www to non-www
server {
    listen 80;
    listen [::]:80;
    server_name www.{{DOMAIN}};
    return 301 http://{{DOMAIN}}$request_uri;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{DOMAIN}};
    root /sites/{{DOMAIN}}/htdocs;
    index index.php index.html;
    
    client_max_body_size 100M;
    access_log /sites/{{DOMAIN}}/logs/access.log;
    error_log /sites/{{DOMAIN}}/logs/error.log;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Allow .well-known for ACME challenges
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/html;
    }
    
    # Block access to hidden files and directories (except .well-known)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ^~ /.well-known/ {
        allow all;
    }
    
    # Block access to sensitive directories (defense in depth)
    location ^~ /config/ {
        deny all;
    }
    
    location ^~ /logs/ {
        deny all;
    }
    
    # Block access to WordPress sensitive files
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }
    
    location ~* ^/(wp-config\.php|wp-config-sample\.php|readme\.html|license\.txt) {
        deny all;
    }
    
    # Block access to wp-content/uploads if PHP execution is needed
    location ~* ^/wp-content/uploads/.*\.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
        deny all;
    }
    
    # Protect wp-includes
    location ~* ^/wp-includes/.*\.php$ {
        deny all;
    }
    
    location ~* ^/wp-includes/js/tinymce/langs/.*\.php$ {
        deny all;
    }
    
    # WordPress security - rate limiting for sensitive areas
    location ~ ^/(wp-admin|wp-login\.php) {
        limit_req zone=admin burst=5 nodelay;
        try_files $uri $uri/ /index.php?$args;
        
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_pass unix:/run/php-fpm{{PHP_VERSION}}/{{DOMAIN}}.sock;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param REQUEST_SCHEME $scheme;
            fastcgi_param HTTPS $https if_not_empty;
            
            # WordPress-specific fastcgi settings
            fastcgi_param SERVER_NAME $host;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
        }
    }
    
    # XML-RPC security (disable by default, can be enabled if needed)
    location = /xmlrpc.php {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # WordPress login brute force protection
    location = /wp-login.php {
        limit_req zone=login burst=2 nodelay;
        fastcgi_pass unix:/run/php-fpm{{PHP_VERSION}}/{{DOMAIN}}.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param REQUEST_SCHEME $scheme;
        fastcgi_param HTTPS $https if_not_empty;
    }
    
    # WordPress permalinks
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    
    # WordPress wp-cron (can be disabled if using system cron)
    location = /wp-cron.php {
        fastcgi_pass unix:/run/php-fpm{{PHP_VERSION}}/{{DOMAIN}}.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    
    # PHP file handling with WordPress-optimized settings
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass unix:/run/php-fpm{{PHP_VERSION}}/{{DOMAIN}}.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param REQUEST_SCHEME $scheme;
        fastcgi_param HTTPS $https if_not_empty;
        
        # WordPress-specific settings
        fastcgi_param SERVER_NAME $host;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }
    
    # Static file caching with WordPress-specific rules
    location ~* \.(css|js)$ {
        expires 7d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable gzip compression
        gzip_vary on;
    }
    
    location ~* \.(jpg|jpeg|gif|png|webp|svg|ico|pdf|mp4|webm)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Security: prevent direct access to uploaded PHP files
        location ~* \.(php|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    # WordPress wp-content/uploads optimization
    location ~* ^/wp-content/uploads/.*\.(jpg|jpeg|gif|png|webp|svg|ico|pdf|mp4|webm)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # Font files
    location ~* \.(woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
}