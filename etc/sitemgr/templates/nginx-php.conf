# Redirect HTTP to HTTPS (except ACME challenges)
server {
    listen 80;
    listen [::]:80;
    server_name {{DOMAIN}} www.{{DOMAIN}};

    # Allow ACME challenges via HTTP
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/html;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://{{DOMAIN}}$request_uri;
    }
}

# HTTPS redirect for www
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name www.{{DOMAIN}};
    
    ssl_certificate /etc/nginx/ssl/{{DOMAIN}}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{DOMAIN}}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    return 301 https://{{DOMAIN}}$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name {{DOMAIN}};
    
    ssl_certificate /etc/nginx/ssl/{{DOMAIN}}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{DOMAIN}}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    root /sites/{{DOMAIN}}/htdocs;
    index index.php index.html;
    
    access_log /sites/{{DOMAIN}}/logs/nginx/access.log;
    error_log /sites/{{DOMAIN}}/logs/nginx/error.log;
    
    # Security - Block access to hidden files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to sensitive directories (defense in depth)
    location ^~ /config/ {
        deny all;
    }
    
    location ^~ /logs/ {
        deny all;
    }
    
    # Rate limiting for login pages
    location ~ /(wp-login\.php|xmlrpc\.php) {
        limit_req zone=login burst=2 nodelay;
        fastcgi_pass unix:/run/php-fpm{{PHP_VERSION}}/{{DOMAIN}}.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    
    # General rate limiting
    location / {
        limit_req zone=general burst=20 nodelay;
        try_files $uri $uri/ /index.php?$args;
    }
    
    # PHP handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass unix:/run/php-fpm{{PHP_VERSION}}/{{DOMAIN}}.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
    }
    
    # Static file caching - Optimized for performance
    location ~* \.(css|js)$ {
        expires 7d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        gzip_vary on;
        
        # Security: prevent PHP execution in asset directories
        location ~* \.(php|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    location ~* \.(jpg|jpeg|gif|png|webp|avif|svg|ico|pdf|mp4|webm|mov|avi)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Security: prevent PHP execution in asset directories
        location ~* \.(php|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    # Font files (longer cache)
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
    
    # Document files
    location ~* \.(xml|txt|csv|json)$ {
        expires 1h;
        add_header Cache-Control "public";
    }
}